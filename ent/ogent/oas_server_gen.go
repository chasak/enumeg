// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateGroup implements createGroup operation.
	//
	// Creates a new Group and persists it to storage.
	//
	// POST /groups
	CreateGroup(ctx context.Context, req CreateGroupReq) (CreateGroupRes, error)
	// CreateUser implements createUser operation.
	//
	// Creates a new User and persists it to storage.
	//
	// POST /users
	CreateUser(ctx context.Context, req CreateUserReq) (CreateUserRes, error)
	// CreateVideo implements createVideo operation.
	//
	// Creates a new Video and persists it to storage.
	//
	// POST /videos
	CreateVideo(ctx context.Context, req CreateVideoReq) (CreateVideoRes, error)
	// DeleteGroup implements deleteGroup operation.
	//
	// Deletes the Group with the requested ID.
	//
	// DELETE /groups/{id}
	DeleteGroup(ctx context.Context, params DeleteGroupParams) (DeleteGroupRes, error)
	// DeleteUser implements deleteUser operation.
	//
	// Deletes the User with the requested ID.
	//
	// DELETE /users/{id}
	DeleteUser(ctx context.Context, params DeleteUserParams) (DeleteUserRes, error)
	// DeleteVideo implements deleteVideo operation.
	//
	// Deletes the Video with the requested ID.
	//
	// DELETE /videos/{id}
	DeleteVideo(ctx context.Context, params DeleteVideoParams) (DeleteVideoRes, error)
	// ListGroup implements listGroup operation.
	//
	// List Groups.
	//
	// GET /groups
	ListGroup(ctx context.Context, params ListGroupParams) (ListGroupRes, error)
	// ListGroupAdmins implements listGroupAdmins operation.
	//
	// List attached Admins.
	//
	// GET /groups/{id}/admins
	ListGroupAdmins(ctx context.Context, params ListGroupAdminsParams) (ListGroupAdminsRes, error)
	// ListGroupMembers implements listGroupMembers operation.
	//
	// List attached Members.
	//
	// GET /groups/{id}/members
	ListGroupMembers(ctx context.Context, params ListGroupMembersParams) (ListGroupMembersRes, error)
	// ListGroupModerators implements listGroupModerators operation.
	//
	// List attached Moderators.
	//
	// GET /groups/{id}/moderators
	ListGroupModerators(ctx context.Context, params ListGroupModeratorsParams) (ListGroupModeratorsRes, error)
	// ListGroupStreamers implements listGroupStreamers operation.
	//
	// List attached Streamers.
	//
	// GET /groups/{id}/streamers
	ListGroupStreamers(ctx context.Context, params ListGroupStreamersParams) (ListGroupStreamersRes, error)
	// ListGroupVideos implements listGroupVideos operation.
	//
	// List attached Videos.
	//
	// GET /groups/{id}/videos
	ListGroupVideos(ctx context.Context, params ListGroupVideosParams) (ListGroupVideosRes, error)
	// ListUser implements listUser operation.
	//
	// List Users.
	//
	// GET /users
	ListUser(ctx context.Context, params ListUserParams) (ListUserRes, error)
	// ListUserAdminGroups implements listUserAdminGroups operation.
	//
	// List attached AdminGroups.
	//
	// GET /users/{id}/admin-groups
	ListUserAdminGroups(ctx context.Context, params ListUserAdminGroupsParams) (ListUserAdminGroupsRes, error)
	// ListUserJoinedGroups implements listUserJoinedGroups operation.
	//
	// List attached JoinedGroups.
	//
	// GET /users/{id}/joined-groups
	ListUserJoinedGroups(ctx context.Context, params ListUserJoinedGroupsParams) (ListUserJoinedGroupsRes, error)
	// ListUserLikedVideos implements listUserLikedVideos operation.
	//
	// List attached LikedVideos.
	//
	// GET /users/{id}/liked-videos
	ListUserLikedVideos(ctx context.Context, params ListUserLikedVideosParams) (ListUserLikedVideosRes, error)
	// ListUserModeratedVideos implements listUserModeratedVideos operation.
	//
	// List attached ModeratedVideos.
	//
	// GET /users/{id}/moderated-videos
	ListUserModeratedVideos(ctx context.Context, params ListUserModeratedVideosParams) (ListUserModeratedVideosRes, error)
	// ListUserModeratingGroups implements listUserModeratingGroups operation.
	//
	// List attached ModeratingGroups.
	//
	// GET /users/{id}/moderating-groups
	ListUserModeratingGroups(ctx context.Context, params ListUserModeratingGroupsParams) (ListUserModeratingGroupsRes, error)
	// ListUserStreamVideos implements listUserStreamVideos operation.
	//
	// List attached StreamVideos.
	//
	// GET /users/{id}/stream-videos
	ListUserStreamVideos(ctx context.Context, params ListUserStreamVideosParams) (ListUserStreamVideosRes, error)
	// ListUserStreamingGroups implements listUserStreamingGroups operation.
	//
	// List attached StreamingGroups.
	//
	// GET /users/{id}/streaming-groups
	ListUserStreamingGroups(ctx context.Context, params ListUserStreamingGroupsParams) (ListUserStreamingGroupsRes, error)
	// ListUserViewedVideos implements listUserViewedVideos operation.
	//
	// List attached ViewedVideos.
	//
	// GET /users/{id}/viewed-videos
	ListUserViewedVideos(ctx context.Context, params ListUserViewedVideosParams) (ListUserViewedVideosRes, error)
	// ListVideo implements listVideo operation.
	//
	// List Videos.
	//
	// GET /videos
	ListVideo(ctx context.Context, params ListVideoParams) (ListVideoRes, error)
	// ListVideoLikes implements listVideoLikes operation.
	//
	// List attached Likes.
	//
	// GET /videos/{id}/likes
	ListVideoLikes(ctx context.Context, params ListVideoLikesParams) (ListVideoLikesRes, error)
	// ListVideoModeraters implements listVideoModeraters operation.
	//
	// List attached Moderaters.
	//
	// GET /videos/{id}/moderaters
	ListVideoModeraters(ctx context.Context, params ListVideoModeratersParams) (ListVideoModeratersRes, error)
	// ListVideoStreamers implements listVideoStreamers operation.
	//
	// List attached Streamers.
	//
	// GET /videos/{id}/streamers
	ListVideoStreamers(ctx context.Context, params ListVideoStreamersParams) (ListVideoStreamersRes, error)
	// ListVideoViewers implements listVideoViewers operation.
	//
	// List attached Viewers.
	//
	// GET /videos/{id}/viewers
	ListVideoViewers(ctx context.Context, params ListVideoViewersParams) (ListVideoViewersRes, error)
	// ReadGroup implements readGroup operation.
	//
	// Finds the Group with the requested ID and returns it.
	//
	// GET /groups/{id}
	ReadGroup(ctx context.Context, params ReadGroupParams) (ReadGroupRes, error)
	// ReadUser implements readUser operation.
	//
	// Finds the User with the requested ID and returns it.
	//
	// GET /users/{id}
	ReadUser(ctx context.Context, params ReadUserParams) (ReadUserRes, error)
	// ReadVideo implements readVideo operation.
	//
	// Finds the Video with the requested ID and returns it.
	//
	// GET /videos/{id}
	ReadVideo(ctx context.Context, params ReadVideoParams) (ReadVideoRes, error)
	// ReadVideoGroup implements readVideoGroup operation.
	//
	// Find the attached Group of the Video with the given ID.
	//
	// GET /videos/{id}/group
	ReadVideoGroup(ctx context.Context, params ReadVideoGroupParams) (ReadVideoGroupRes, error)
	// UpdateGroup implements updateGroup operation.
	//
	// Updates a Group and persists changes to storage.
	//
	// PATCH /groups/{id}
	UpdateGroup(ctx context.Context, req UpdateGroupReq, params UpdateGroupParams) (UpdateGroupRes, error)
	// UpdateUser implements updateUser operation.
	//
	// Updates a User and persists changes to storage.
	//
	// PATCH /users/{id}
	UpdateUser(ctx context.Context, req UpdateUserReq, params UpdateUserParams) (UpdateUserRes, error)
	// UpdateVideo implements updateVideo operation.
	//
	// Updates a Video and persists changes to storage.
	//
	// PATCH /videos/{id}
	UpdateVideo(ctx context.Context, req UpdateVideoReq, params UpdateVideoParams) (UpdateVideoRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	cfg config

	requests metric.Int64Counter
	errors   metric.Int64Counter
	duration metric.Int64Histogram
}

func NewServer(h Handler, opts ...Option) (*Server, error) {
	s := &Server{
		h:   h,
		cfg: newConfig(opts...),
	}
	var err error
	if s.requests, err = s.cfg.Meter.NewInt64Counter(otelogen.ServerRequestCount); err != nil {
		return nil, err
	}
	if s.errors, err = s.cfg.Meter.NewInt64Counter(otelogen.ServerErrorsCount); err != nil {
		return nil, err
	}
	if s.duration, err = s.cfg.Meter.NewInt64Histogram(otelogen.ServerDuration); err != nil {
		return nil, err
	}
	return s, nil
}
