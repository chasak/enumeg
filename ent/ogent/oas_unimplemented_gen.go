// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = bits.LeadingZeros64
	_ = big.Rat{}
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = attribute.KeyValue{}
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
	_ = jx.Null
	_ = sync.Pool{}
	_ = codes.Unset
)

var _ Handler = UnimplementedHandler{}

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

// CreateGroup implements createGroup operation.
//
// Creates a new Group and persists it to storage.
//
// POST /groups
func (UnimplementedHandler) CreateGroup(ctx context.Context, req CreateGroupReq) (r CreateGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateVideo implements createVideo operation.
//
// Creates a new Video and persists it to storage.
//
// POST /videos
func (UnimplementedHandler) CreateVideo(ctx context.Context, req CreateVideoReq) (r CreateVideoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteGroup implements deleteGroup operation.
//
// Deletes the Group with the requested ID.
//
// DELETE /groups/{id}
func (UnimplementedHandler) DeleteGroup(ctx context.Context, params DeleteGroupParams) (r DeleteGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteVideo implements deleteVideo operation.
//
// Deletes the Video with the requested ID.
//
// DELETE /videos/{id}
func (UnimplementedHandler) DeleteVideo(ctx context.Context, params DeleteVideoParams) (r DeleteVideoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroup implements listGroup operation.
//
// List Groups.
//
// GET /groups
func (UnimplementedHandler) ListGroup(ctx context.Context, params ListGroupParams) (r ListGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupAdmins implements listGroupAdmins operation.
//
// List attached Admins.
//
// GET /groups/{id}/admins
func (UnimplementedHandler) ListGroupAdmins(ctx context.Context, params ListGroupAdminsParams) (r ListGroupAdminsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupMembers implements listGroupMembers operation.
//
// List attached Members.
//
// GET /groups/{id}/members
func (UnimplementedHandler) ListGroupMembers(ctx context.Context, params ListGroupMembersParams) (r ListGroupMembersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupModerators implements listGroupModerators operation.
//
// List attached Moderators.
//
// GET /groups/{id}/moderators
func (UnimplementedHandler) ListGroupModerators(ctx context.Context, params ListGroupModeratorsParams) (r ListGroupModeratorsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupStreamers implements listGroupStreamers operation.
//
// List attached Streamers.
//
// GET /groups/{id}/streamers
func (UnimplementedHandler) ListGroupStreamers(ctx context.Context, params ListGroupStreamersParams) (r ListGroupStreamersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListGroupVideos implements listGroupVideos operation.
//
// List attached Videos.
//
// GET /groups/{id}/videos
func (UnimplementedHandler) ListGroupVideos(ctx context.Context, params ListGroupVideosParams) (r ListGroupVideosRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserAdminGroups implements listUserAdminGroups operation.
//
// List attached AdminGroups.
//
// GET /users/{id}/admin-groups
func (UnimplementedHandler) ListUserAdminGroups(ctx context.Context, params ListUserAdminGroupsParams) (r ListUserAdminGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserJoinedGroups implements listUserJoinedGroups operation.
//
// List attached JoinedGroups.
//
// GET /users/{id}/joined-groups
func (UnimplementedHandler) ListUserJoinedGroups(ctx context.Context, params ListUserJoinedGroupsParams) (r ListUserJoinedGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserLikedVideos implements listUserLikedVideos operation.
//
// List attached LikedVideos.
//
// GET /users/{id}/liked-videos
func (UnimplementedHandler) ListUserLikedVideos(ctx context.Context, params ListUserLikedVideosParams) (r ListUserLikedVideosRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserModeratedVideos implements listUserModeratedVideos operation.
//
// List attached ModeratedVideos.
//
// GET /users/{id}/moderated-videos
func (UnimplementedHandler) ListUserModeratedVideos(ctx context.Context, params ListUserModeratedVideosParams) (r ListUserModeratedVideosRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserModeratingGroups implements listUserModeratingGroups operation.
//
// List attached ModeratingGroups.
//
// GET /users/{id}/moderating-groups
func (UnimplementedHandler) ListUserModeratingGroups(ctx context.Context, params ListUserModeratingGroupsParams) (r ListUserModeratingGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserStreamVideos implements listUserStreamVideos operation.
//
// List attached StreamVideos.
//
// GET /users/{id}/stream-videos
func (UnimplementedHandler) ListUserStreamVideos(ctx context.Context, params ListUserStreamVideosParams) (r ListUserStreamVideosRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserStreamingGroups implements listUserStreamingGroups operation.
//
// List attached StreamingGroups.
//
// GET /users/{id}/streaming-groups
func (UnimplementedHandler) ListUserStreamingGroups(ctx context.Context, params ListUserStreamingGroupsParams) (r ListUserStreamingGroupsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserViewedVideos implements listUserViewedVideos operation.
//
// List attached ViewedVideos.
//
// GET /users/{id}/viewed-videos
func (UnimplementedHandler) ListUserViewedVideos(ctx context.Context, params ListUserViewedVideosParams) (r ListUserViewedVideosRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListVideo implements listVideo operation.
//
// List Videos.
//
// GET /videos
func (UnimplementedHandler) ListVideo(ctx context.Context, params ListVideoParams) (r ListVideoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListVideoLikes implements listVideoLikes operation.
//
// List attached Likes.
//
// GET /videos/{id}/likes
func (UnimplementedHandler) ListVideoLikes(ctx context.Context, params ListVideoLikesParams) (r ListVideoLikesRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListVideoModeraters implements listVideoModeraters operation.
//
// List attached Moderaters.
//
// GET /videos/{id}/moderaters
func (UnimplementedHandler) ListVideoModeraters(ctx context.Context, params ListVideoModeratersParams) (r ListVideoModeratersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListVideoStreamers implements listVideoStreamers operation.
//
// List attached Streamers.
//
// GET /videos/{id}/streamers
func (UnimplementedHandler) ListVideoStreamers(ctx context.Context, params ListVideoStreamersParams) (r ListVideoStreamersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListVideoViewers implements listVideoViewers operation.
//
// List attached Viewers.
//
// GET /videos/{id}/viewers
func (UnimplementedHandler) ListVideoViewers(ctx context.Context, params ListVideoViewersParams) (r ListVideoViewersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadGroup implements readGroup operation.
//
// Finds the Group with the requested ID and returns it.
//
// GET /groups/{id}
func (UnimplementedHandler) ReadGroup(ctx context.Context, params ReadGroupParams) (r ReadGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadVideo implements readVideo operation.
//
// Finds the Video with the requested ID and returns it.
//
// GET /videos/{id}
func (UnimplementedHandler) ReadVideo(ctx context.Context, params ReadVideoParams) (r ReadVideoRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadVideoGroup implements readVideoGroup operation.
//
// Find the attached Group of the Video with the given ID.
//
// GET /videos/{id}/group
func (UnimplementedHandler) ReadVideoGroup(ctx context.Context, params ReadVideoGroupParams) (r ReadVideoGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateGroup implements updateGroup operation.
//
// Updates a Group and persists changes to storage.
//
// PATCH /groups/{id}
func (UnimplementedHandler) UpdateGroup(ctx context.Context, req UpdateGroupReq, params UpdateGroupParams) (r UpdateGroupRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateVideo implements updateVideo operation.
//
// Updates a Video and persists changes to storage.
//
// PATCH /videos/{id}
func (UnimplementedHandler) UpdateVideo(ctx context.Context, req UpdateVideoReq, params UpdateVideoParams) (r UpdateVideoRes, _ error) {
	return r, ht.ErrNotImplemented
}
