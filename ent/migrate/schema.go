// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VideosColumns holds the columns for the "videos" table.
	VideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "videotype", Type: field.TypeEnum, Enums: []string{"live", "video", "playlist"}},
		{Name: "group_videos", Type: field.TypeInt, Nullable: true},
	}
	// VideosTable holds the schema information for the "videos" table.
	VideosTable = &schema.Table{
		Name:       "videos",
		Columns:    VideosColumns,
		PrimaryKey: []*schema.Column{VideosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "videos_groups_videos",
				Columns:    []*schema.Column{VideosColumns[3]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GroupAdminsColumns holds the columns for the "group_admins" table.
	GroupAdminsColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupAdminsTable holds the schema information for the "group_admins" table.
	GroupAdminsTable = &schema.Table{
		Name:       "group_admins",
		Columns:    GroupAdminsColumns,
		PrimaryKey: []*schema.Column{GroupAdminsColumns[0], GroupAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_admins_group_id",
				Columns:    []*schema.Column{GroupAdminsColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_admins_user_id",
				Columns:    []*schema.Column{GroupAdminsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupMembersColumns holds the columns for the "group_members" table.
	GroupMembersColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupMembersTable holds the schema information for the "group_members" table.
	GroupMembersTable = &schema.Table{
		Name:       "group_members",
		Columns:    GroupMembersColumns,
		PrimaryKey: []*schema.Column{GroupMembersColumns[0], GroupMembersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_members_group_id",
				Columns:    []*schema.Column{GroupMembersColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_members_user_id",
				Columns:    []*schema.Column{GroupMembersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupModeratorsColumns holds the columns for the "group_moderators" table.
	GroupModeratorsColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupModeratorsTable holds the schema information for the "group_moderators" table.
	GroupModeratorsTable = &schema.Table{
		Name:       "group_moderators",
		Columns:    GroupModeratorsColumns,
		PrimaryKey: []*schema.Column{GroupModeratorsColumns[0], GroupModeratorsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_moderators_group_id",
				Columns:    []*schema.Column{GroupModeratorsColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_moderators_user_id",
				Columns:    []*schema.Column{GroupModeratorsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupStreamersColumns holds the columns for the "group_streamers" table.
	GroupStreamersColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// GroupStreamersTable holds the schema information for the "group_streamers" table.
	GroupStreamersTable = &schema.Table{
		Name:       "group_streamers",
		Columns:    GroupStreamersColumns,
		PrimaryKey: []*schema.Column{GroupStreamersColumns[0], GroupStreamersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_streamers_group_id",
				Columns:    []*schema.Column{GroupStreamersColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_streamers_user_id",
				Columns:    []*schema.Column{GroupStreamersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserStreamVideosColumns holds the columns for the "user_stream_videos" table.
	UserStreamVideosColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
	}
	// UserStreamVideosTable holds the schema information for the "user_stream_videos" table.
	UserStreamVideosTable = &schema.Table{
		Name:       "user_stream_videos",
		Columns:    UserStreamVideosColumns,
		PrimaryKey: []*schema.Column{UserStreamVideosColumns[0], UserStreamVideosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_stream_videos_user_id",
				Columns:    []*schema.Column{UserStreamVideosColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_stream_videos_video_id",
				Columns:    []*schema.Column{UserStreamVideosColumns[1]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserLikedVideosColumns holds the columns for the "user_liked_videos" table.
	UserLikedVideosColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
	}
	// UserLikedVideosTable holds the schema information for the "user_liked_videos" table.
	UserLikedVideosTable = &schema.Table{
		Name:       "user_liked_videos",
		Columns:    UserLikedVideosColumns,
		PrimaryKey: []*schema.Column{UserLikedVideosColumns[0], UserLikedVideosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_liked_videos_user_id",
				Columns:    []*schema.Column{UserLikedVideosColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_liked_videos_video_id",
				Columns:    []*schema.Column{UserLikedVideosColumns[1]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserViewedVideosColumns holds the columns for the "user_viewed_videos" table.
	UserViewedVideosColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
	}
	// UserViewedVideosTable holds the schema information for the "user_viewed_videos" table.
	UserViewedVideosTable = &schema.Table{
		Name:       "user_viewed_videos",
		Columns:    UserViewedVideosColumns,
		PrimaryKey: []*schema.Column{UserViewedVideosColumns[0], UserViewedVideosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_viewed_videos_user_id",
				Columns:    []*schema.Column{UserViewedVideosColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_viewed_videos_video_id",
				Columns:    []*schema.Column{UserViewedVideosColumns[1]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserModeratedVideosColumns holds the columns for the "user_moderated_videos" table.
	UserModeratedVideosColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
	}
	// UserModeratedVideosTable holds the schema information for the "user_moderated_videos" table.
	UserModeratedVideosTable = &schema.Table{
		Name:       "user_moderated_videos",
		Columns:    UserModeratedVideosColumns,
		PrimaryKey: []*schema.Column{UserModeratedVideosColumns[0], UserModeratedVideosColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_moderated_videos_user_id",
				Columns:    []*schema.Column{UserModeratedVideosColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_moderated_videos_video_id",
				Columns:    []*schema.Column{UserModeratedVideosColumns[1]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GroupsTable,
		UsersTable,
		VideosTable,
		GroupAdminsTable,
		GroupMembersTable,
		GroupModeratorsTable,
		GroupStreamersTable,
		UserStreamVideosTable,
		UserLikedVideosTable,
		UserViewedVideosTable,
		UserModeratedVideosTable,
	}
)

func init() {
	VideosTable.ForeignKeys[0].RefTable = GroupsTable
	GroupAdminsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupAdminsTable.ForeignKeys[1].RefTable = UsersTable
	GroupMembersTable.ForeignKeys[0].RefTable = GroupsTable
	GroupMembersTable.ForeignKeys[1].RefTable = UsersTable
	GroupModeratorsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupModeratorsTable.ForeignKeys[1].RefTable = UsersTable
	GroupStreamersTable.ForeignKeys[0].RefTable = GroupsTable
	GroupStreamersTable.ForeignKeys[1].RefTable = UsersTable
	UserStreamVideosTable.ForeignKeys[0].RefTable = UsersTable
	UserStreamVideosTable.ForeignKeys[1].RefTable = VideosTable
	UserLikedVideosTable.ForeignKeys[0].RefTable = UsersTable
	UserLikedVideosTable.ForeignKeys[1].RefTable = VideosTable
	UserViewedVideosTable.ForeignKeys[0].RefTable = UsersTable
	UserViewedVideosTable.ForeignKeys[1].RefTable = VideosTable
	UserModeratedVideosTable.ForeignKeys[0].RefTable = UsersTable
	UserModeratedVideosTable.ForeignKeys[1].RefTable = VideosTable
}
